@use 'sass:map';
@use '../../styles/tokens/spacing.scss' as spacing;
@use '../../styles/tokens/colors.scss' as colors;
@use '../../styles/tokens/radius.scss' as radius;
@use '../../styles/tokens/breakpoints.scss' as breakpoints;
@use '../../styles/tokens/layout.scss' as layout;

.container {
  display: flex;
  flex-direction: column;
  width: 100%;
  padding: map.get(spacing.$rem, 16);
  box-shadow: 5px 5px 20px 5px rgba(0, 0, 0, 0.1);
  border-radius: radius.$md;

  @media screen and (min-width: breakpoints.$sm) {
    padding: map.get(spacing.$rem, 32);
  }
}

.label {
  text-transform: uppercase;
  color: colors.$primary;
}

.disabledLabel {
  color: colors.$grey;
}

.input {
  appearance: none;
  background-color: colors.$background;
  border: 1px solid colors.$grey;
  border-radius: radius.$sm;
  padding: map.get(spacing.$rem, 8) map.get(spacing.$rem, 12);
}

.input:disabled {
  background-color: colors.$light;
}

.inputGroup,
.contentGroup {
  display: flex;
  flex-direction: column;
  gap: map.get(spacing.$rem, 8);
  width: 100%;
}

.success,
.title,
.inputGroup {
  margin-bottom: map.get(spacing.$rem, 24);

  @media screen and (min-width: breakpoints.$sm) {
    margin-bottom: map.get(spacing.$rem, 32);
  }
}

.radio {
  pointer-events: none;
  position: absolute;
  opacity: 0;
}

.radioLabel {
  display: flex;
  gap: map.get(spacing.$rem, 8);
  justify-content: space-between;
  align-items: center;
  width: 100%;
  font-weight: 700;
  padding: map.get(spacing.$rem, 16);
  background-color: colors.$light;
  border-radius: radius.$sm;
  border: 2px solid colors.$light;
  color: colors.$primary;
  cursor: pointer;
  transition: border-color 0.2s ease-in-out;
}

.radio:checked + .radioLabel {
  border-color: colors.$secondary;
}

.radioLabel:hover,
.radio:focus-visible + .radioLabel {
  border-color: colors.$primary;
}

.radioLabelSuffix {
  color: colors.$grey;
  flex-shrink: 0;
}

.radioGroup {
  display: flex;
  flex-direction: column;
  gap: map.get(spacing.$rem, 8);
  width: 100%;

  @media screen and (min-width: breakpoints.$sm) {
    flex-direction: row;
  }
}

.inputRow {
  display: flex;
  flex-direction: column;
  gap: 0;

  @media screen and (min-width: breakpoints.$sm) {
    gap: map.get(spacing.$rem, 8);
    flex-direction: row;
  }
}

.asterix {
  color: colors.$secondary;
}

.lowercase {
  text-transform: lowercase;
}

.hiddenInput {
  position: absolute;
  left: -1000%;
}

.button {
  width: max-content;
}

.buttonIcon {
  width: 1.5rem;
  height: 1.5rem;
}

.error,
.success {
  padding: map.get(spacing.$rem, 16) map.get(spacing.$rem, 24);
  color: colors.$background;
  border-radius: radius.$md;
}

.error {
  background-color: colors.$negative;
}

.success {
  background-color: colors.$positive;
}
